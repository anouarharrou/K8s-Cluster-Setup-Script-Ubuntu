apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin-container
          image: dpage/pgadmin4:latest
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "1"
              memory: "1Gi"
          ports:
            - containerPort: 80
          env:
          - name: PGADMIN_DEFAULT_EMAIL
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: PGADMIN_DEFAULT_EMAIL
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: PGADMIN_DEFAULT_PASSWORD
          volumeMounts:
            - name: pgadmin-storage
              mountPath: /var/lib/pgadmin

      volumes:
        - name: pgadmin-storage
          persistentVolumeClaim:
            claimName: pgadmin-pvc
---

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
data:
  PGADMIN_DEFAULT_EMAIL: YWRtaW5AcGdhZG1pbi5jb20=  # base64 encoded value of 'admin@pgadmin.com'
  PGADMIN_DEFAULT_PASSWORD: UGFzc0B3b3Jk  # base64 encoded value of 'Pass@word'

---

apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
spec:
  selector:
    app: pgadmin
  ports:
    - protocol: TCP
      port: 5050
      targetPort: 80
  type: NodePort  # Change to LoadBalancer or ClusterIP based on your needs


#nohup kubectl port-forward svc/pgadmin-service 31896:5050 > /dev/null 2>&1 &
